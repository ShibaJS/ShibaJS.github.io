{"version":3,"sources":["components/Footer/index.tsx","config/siteMenu.ts","store/LanguageStore.ts","components/Header/index.tsx","components/Root/index.tsx","router/index.ts","components/Document/index.tsx","components/Home/index.tsx","App.tsx","serviceWorker.ts","index.tsx","i18n/index.ts","i18n/en/index.ts","i18n/zh/index.ts","i18n sync /^/.//.*$"],"names":["Footer","react_default","a","createElement","className","Date","getFullYear","siteMenu","name","route","Language","_class","Object","classCallCheck","this","initializerDefineProperty","_descriptor","applyDecoratedDescriptor","prototype","observable","configurable","enumerable","writable","initializer","navigator","language","createContext","Header","languageStore","useContext","LanguageStore","languages","getLanguages","map","it","key","text","getLocalMessage","languageName","style","color","index","ActionButton","href","index_es","defaultMessage","id","Dropdown","onChanged","e","toString","defaultSelectedKey","checkLanguageName","options","Root","props","Header_Header","children","Footer_Footer","routeConfig","component","textAlign","path","alt","src","PrimaryButton","iconProps","iconName","App","observer","locale","messages","react_router_dom","react_router","renderRoutes","Boolean","window","location","hostname","match","initializeIcons","loadTheme","palette","themePrimary","themeLight","themeLighter","themeLighterAlt","themeTertiary","themeSecondary","themeDarkAlt","themeDark","themeDarker","neutralLighterAlt","neutralLighter","neutralLight","neutralQuaternaryAlt","neutralQuaternary","neutralTertiaryAlt","neutralTertiary","neutralSecondary","neutralPrimaryAlt","neutralPrimary","neutralDark","black","white","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","then","registration","unregister","message","toLowerCase","require","concat","error","undefined","split","flattenMessages","nestedMessages","prefix","arguments","length","keys","reduce","value","prefixedKey","assign","_home_travis_build_ShibaJS_ShibaJS_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","default","some","filter","__webpack_require__","r","__webpack_exports__","react_intl__WEBPACK_IMPORTED_MODULE_0__","react_intl_locale_data_en__WEBPACK_IMPORTED_MODULE_1__","_strings_json__WEBPACK_IMPORTED_MODULE_2__","addLocaleData","en","strings","react_intl_locale_data_zh__WEBPACK_IMPORTED_MODULE_1__","zh","./","./en","./en/","./en/index","./en/index.ts","./en/strings","./en/strings.json","./index","./index.ts","./zh","./zh/","./zh/index","./zh/index.ts","./zh/strings","./zh/strings.json","webpackContext","req","webpackContextResolve","o","Error","code","resolve","module","exports"],"mappings":"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","file":"static/js/main.0f937285.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./index.css\";\n\nexport default function Footer() {\n    return (\n        <div className=\"Footer-Container\">\n            <div className=\"Footer-Content\">\n                <div className=\"ms-font-s-plus\">\n                    Copyright Â© 2018-{new Date().getFullYear()} Tlaster\n                </div>\n            </div>\n        </div>\n    );\n}\n","const siteMenu = [\n    {\n        name: \"document\",\n        route: \"/document\",\n    },\n    {\n        name: \"Github\",\n        route: \"https://github.com/ShibaJS/Shiba\",\n    },\n];\n\nexport default siteMenu;\n","import { observable } from \"mobx\";\nimport { createContext } from \"react\";\n\nexport class Language {\n    @observable\n    public language = navigator.language;\n}\n\nexport default createContext(new Language());\n","import { ActionButton } from \"office-ui-fabric-react/lib/Button\";\nimport { Dropdown } from \"office-ui-fabric-react/lib/Dropdown\";\nimport React, { useContext } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport siteMenu from \"../../config/siteMenu\";\nimport { checkLanguageName, getLanguages, getLocalMessage } from \"../../i18n\";\nimport LanguageStore from \"../../store/LanguageStore\";\nimport \"./index.css\";\n\nexport default function Header() {\n    const languageStore = useContext(LanguageStore);\n    const languages = getLanguages().map((it) => {\n        return {\n            key: it,\n            text: getLocalMessage(it).languageName,\n        };\n    });\n    return (\n        <div className=\"Header-Container\">\n            <div className=\"Header-Content\">\n                <span className=\"Site-Title ms-font-su\" style={{ color: \"#ff0000\" }}>ShibaJS</span>\n                <div className=\"Header-Actions\">\n                    {siteMenu.map((it, index) => (\n                        <ActionButton\n                            key={index}\n                            href={it.route}\n                        >\n                            <FormattedMessage\n                                defaultMessage={it.name}\n                                id={it.name}\n                            />\n                        </ActionButton>\n                    ))}\n                    <Dropdown\n                        className=\"Header-Language\"\n                        onChanged={(e) => languageStore.language = e.key.toString()}\n                        defaultSelectedKey={checkLanguageName(languageStore.language)}\n                        options={languages} />\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React from \"react\";\nimport Footer from \"../Footer\";\nimport Header from \"../Header\";\n\n// @ts-ignore\nexport default function Root(props) {\n    return (\n        <div>\n            <Header/>\n            {props.children}\n            <Footer/>\n        </div>\n    );\n}\n","import { RouteConfig } from \"react-router-config\";\nimport Document from \"../components/Document\";\nimport Home from \"../components/Home\";\n\nexport const routeConfig: RouteConfig[] = [\n    {\n        component: Document,\n        path: \"/document\",\n    },\n    {\n        component: Home,\n        path: \"/\",\n    },\n];\n","import React from \"react\";\n\nexport default function Document() {\n    return (\n        <div style={{textAlign:\"center\"}}>\n            WIP!\n        </div>\n    );\n}\n","import { PrimaryButton } from \"office-ui-fabric-react/lib/Button\";\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport \"./index.css\";\n\nexport default function Home() {\n    return (\n        <div className=\"Home-Container\">\n            <div className=\"Home-Main-Container ms-slideUpIn20\">\n                <img alt=\"logo\" className=\"Home-Main-Icon\" src=\"/logo.png\" />\n                <span className=\"Home-Main-Title ms-font-su\">ShibaJS</span>\n                <span className=\"Home-Main-Desc\">\n                    <FormattedMessage id=\"home.main.desc\" />\n                </span>\n                <div className=\"Home-Main-Actions\">\n                    <PrimaryButton\n                        iconProps={{\n                            iconName: \"Like\",\n                        }}\n                    >\n                    <FormattedMessage id=\"home.main.actions.gettingStart\"/>\n                </PrimaryButton>\n                </div>\n            </div>\n            <div className=\"ms-Grid Home-Desc-Container ms-slideUpIn20\">\n                <div className=\"ms-Grid-row\">\n                    <div className=\"ms-Grid-col ms-sm4 ms-md4 ms-lg4 center-col\">\n                        <div className=\"ms-font-xl\">\n                            <FormattedMessage id=\"home.desc.col1.title\" />\n                        </div>\n                        <div className=\"Home-Desc-Content ms-font-m\">\n                            <FormattedMessage id=\"home.desc.col1.content\" />\n                        </div>\n                    </div>\n                    <div className=\"ms-Grid-col ms-sm4 ms-md4 ms-lg4 center-col\">\n                        <div className=\"ms-font-xl\">\n                            <FormattedMessage id=\"home.desc.col2.title\" />\n                        </div>\n                        <div className=\"Home-Desc-Content ms-font-m\">\n                            <FormattedMessage id=\"home.desc.col2.content\" />\n                        </div>\n                    </div>\n                    <div className=\"ms-Grid-col ms-sm4 ms-md4 ms-lg4 center-col\">\n                        <div className=\"ms-font-xl\">\n                            <FormattedMessage id=\"home.desc.col3.title\" />\n                        </div>\n                        <div className=\"Home-Desc-Content ms-font-m\">\n                            <FormattedMessage id=\"home.desc.col3.content\" />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import { observer } from \"mobx-react-lite\";\nimport React, { useContext } from \"react\";\nimport { IntlProvider } from \"react-intl\";\nimport { renderRoutes } from \"react-router-config\";\nimport { BrowserRouter, Switch } from \"react-router-dom\";\nimport Root from \"./components/Root\";\nimport { getLocalMessage } from \"./i18n\";\nimport { routeConfig } from \"./router\";\nimport LanguageStore from \"./store/LanguageStore\";\n\nconst App = observer(() => {\n    const languageStore = useContext(LanguageStore);\n    return (\n        <IntlProvider locale={languageStore.language} messages={getLocalMessage(languageStore.language)}>\n            <BrowserRouter>\n                <Root>\n                    <Switch>\n                        {renderRoutes(routeConfig)}\n                    </Switch>\n                </Root>\n            </BrowserRouter>\n        </IntlProvider>\n    );\n});\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ninterface IConfig {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: IConfig) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href,\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          // tslint:disable-next-line:no-console\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: IConfig) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              // tslint:disable-next-line:no-console\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\",\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              // tslint:disable-next-line:no-console\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      // tslint:disable-next-line:no-console\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: IConfig) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      // tslint:disable-next-line:no-console\n      console.log(\n        \"No internet connection found. App is running in offline mode.\",\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import { initializeIcons } from \"@uifabric/icons\";\nimport { loadTheme } from \"office-ui-fabric-react\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\ninitializeIcons();\n\nloadTheme({\n  palette: {\n    themePrimary: \"#ff0000\",\n    // tslint:disable-next-line:object-literal-sort-keys\n    themeLight: \"#ffb3b3\",\n    themeLighter: \"#ffd6d6\",\n    themeLighterAlt: \"#fff5f5\",\n    themeTertiary: \"#ff6666\",\n    themeSecondary: \"#ff1f1f\",\n    themeDarkAlt: \"#e60000\",\n    themeDark: \"#c20000\",\n    themeDarker: \"#8f0000\",\n    neutralLighterAlt: \"#f8f8f8\",\n    neutralLighter: \"#f4f4f4\",\n    neutralLight: \"#eaeaea\",\n    neutralQuaternaryAlt: \"#dadada\",\n    neutralQuaternary: \"#d0d0d0\",\n    neutralTertiaryAlt: \"#c8c8c8\",\n    neutralTertiary: \"#c2c2c2\",\n    neutralSecondary: \"#858585\",\n    neutralPrimaryAlt: \"#4b4b4b\",\n    neutralPrimary: \"#333333\",\n    neutralDark: \"#272727\",\n    black: \"#1d1d1d\",\n    white: \"#ffffff\",\n  },\n});\n\nReactDOM.render(<App/>, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","function getLocalMessage(language: string): any {\n    language = language.toLowerCase();\n\n    let message;\n    try {\n        message = require(`./${language}`);\n    } catch (error) {\n        message = undefined;\n    }\n\n    if (!message) {\n        language = language.split(\"-\")[0];\n        try {\n            message = require(`./${language}`);\n        } catch (error) {\n            message = undefined;\n        }\n    }\n    if (!message) {\n        message = require(\"./en\");\n    }\n\n    return flattenMessages(message.default);\n}\n\nfunction flattenMessages(nestedMessages: any, prefix = \"\") {\n    if (!nestedMessages) {\n        return {};\n    }\n    return Object.keys(nestedMessages).reduce((messages, key) => {\n        const value = nestedMessages[key];\n        const prefixedKey = prefix ? `${prefix}.${key}` : key;\n\n        if (typeof value === \"string\") {\n            Object.assign(messages, { [prefixedKey]: value });\n        } else {\n            Object.assign(messages, flattenMessages(value, prefixedKey));\n        }\n\n        return messages;\n    }, {});\n}\n\nfunction checkLanguageName(language: string): string {\n    language = language.toLowerCase();\n    const languages = getLanguages();\n    if (languages.some((it) => it === language)) {\n        return languages.filter((it) => it === language)[0];\n    }\n    language = language.split(\"-\")[0];\n    if (languages.some((it) => it === language)) {\n        return languages.filter((it) => it === language)[0];\n    }\n    return \"\";\n}\n\nfunction getLanguages() {\n    return [\"zh\", \"en\"];\n}\n\nexport {\n    getLocalMessage,\n    getLanguages,\n    checkLanguageName,\n};\n","import {addLocaleData} from \"react-intl\";\nimport * as en from \"react-intl/locale-data/en\";\nimport strings from \"./strings.json\";\n\naddLocaleData(en);\n\nexport default strings;\n","import {addLocaleData} from \"react-intl\";\nimport * as zh from \"react-intl/locale-data/zh\";\nimport strings from \"./strings.json\";\n\naddLocaleData(zh);\n\nexport default strings;\n","var map = {\n\t\"./\": 20,\n\t\"./en\": 33,\n\t\"./en/\": 33,\n\t\"./en/index\": 33,\n\t\"./en/index.ts\": 33,\n\t\"./en/strings\": 38,\n\t\"./en/strings.json\": 38,\n\t\"./index\": 20,\n\t\"./index.ts\": 20,\n\t\"./zh\": 37,\n\t\"./zh/\": 37,\n\t\"./zh/index\": 37,\n\t\"./zh/index.ts\": 37,\n\t\"./zh/strings\": 39,\n\t\"./zh/strings.json\": 39\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 64;"],"sourceRoot":""}